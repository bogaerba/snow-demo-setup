---
- hosts: EOLE69
  collections:
    - ibm.ibm_zos_core
  gather_facts: no
   

  vars:
  environment: "{{ environment_vars }}"
    


# # query the JCL by means of a JOBID
#   tasks: 
#   - name: Query a job with a job name of                        
#     zos_job_query:      
#       job_id: "{{JOBNR}}"                                    # holds the number of the JOB that went wrong
#       #job_id: "JOB02987"
#     register: results

# # display the ret_code of the job
#   - name: display the return code of job                    
#     ansible.builtin.debug:
#       msg: "{{results.jobs[0].ret_code}}"                   # display the return code of the JOB with JOB=JOBNR


#   - name: Job output with DD names
#     zos_job_output:
#       job_id: "{{JOBNR}}"                                   # display the output of JOB with JOBNR. JOBs have several ouputs (DD names)
#                                                             # we need to look at the DD name with name JESMSGLG to find the Return Code (RC)
#     register: JESMSGLG_output         

#   - name: display JESMSGLG
#     ansible.builtin.debug:
#       #msg: "{{JESMSGLG_output.jobs[0].ddnames[0]}}"              # we can display the whole output of DD JESMSGLG ...
#       msg: "{{JESMSGLG_output.jobs[0].ddnames[0].content[12]}}"   # ... or line 12 displaying the name of the JOB and the RC=****

############  harde knip    ##########

  - name: find {{ERROR_CODE}} in dataset
    zos_find:                                                   # zos_find play for finding text in a dataset
      patterns:                                                 # define the patterns/filters: where to look
        - "{{target_DSN}}"                                      # dummy data set to be replaced by controlM log
        #- THEWALL.COLRUYT(MEMBER1)
      contains: "{{ERROR_CODE}}"                                # the error code we are looking for put in as external variable
    register: ERROR_CODE_Found                                  # create a var that holds the result of the zos_find function

  - name: display found results
    ansible.builtin.debug:
      msg: "{{ERROR_CODE_Found.data_sets[0].name}}"              # peel off the data_set name in where the IEF450I was found
      #msg: "{{ERROR_CODE_Found}}"              # peel off the data_set name in where the IEF450I was found
      

  - name: search line that contains {{ERROR_CODE}}
    ansible.builtin.command: dgrep {{ERROR_CODE}} {{target_DSN}}    # use the ZOAU command to isolate the line where error was found
    register: infoLine                                              # store the result of the dgrep command

  - name: Display the full line containing {{ERROR_CODE}}
    ansible.builtin.debug:        
      msg: "{{infoLine.stdout_lines[0]}}"                           # display the complete line that holds IEF450I

