---
- name: Linux Batch Job
  hosts: cloudvsi
  gather_facts: false

  tasks:
    - name: obtain script name
      shell: echo "{{ sn_short_description }}"|awk '{ print $1 }'
      register: script
    - name: show script name
      debug:
        msg: "{{ script.stdout }}"
    - name: connect to system & search for script output
      shell: grep -R -l "{{ script.stdout }}" /tmp/*
      register: result
    - name: show resulting file
      debug:
        msg: "{{ result }}"
    - name: connect to system & get script output
      ansible.builtin.command: cat "{{ result.stdout }}"
      register: catfile
      
      ### IGNORE
      
    - name: obtain servicenow incident
      ansible.builtin.uri:
        url: https://dev213519.service-now.com/api/now/table/incident?sysparm_query=short_descriptionLIKE{{ sn_query }}&sysparm_limit=10
        method: GET
        headers:
          Content-Type: application/json
          Accept: application/json
        user: admin
        password: -J0crDV2t@Bm
        return_content: true
      register: output
    - name: get incident number
      ansible.builtin.set_fact:
        sn_incident: "{{ output.json.result[0].number }}"
      when: output is defined
      register: result
      ignore_errors: true
    - name: return result
      ansible.builtin.debug:
        msg: "{{ result }}"
    - name: check whether incident has been found
      ansible.builtin.set_fact:
        sn_incident: "{{ sn_incident_survey }}"
      when: result is failed

      ### /IGNORE
      
    - name: show incident number
      ansible.builtin.debug:
        msg: "{{ sn_incident }}"
    - name: update incident
      servicenow.itsm.incident:
        instance:
          host: https://dev213519.service-now.com
          username: admin
          password: -J0crDV2t@Bm
        number: "{{ sn_incident }}"
        description: "{{ catfile }}"
