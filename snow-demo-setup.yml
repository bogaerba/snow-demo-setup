---
- name: Configure SNOW user for demo environment
  hosts: 127.0.0.1
  connection: local
  become: false

  vars:

    # servicenow instance vars
    instance:
    username:
    password:

    # username/password to use for new user account
    demo_username:
    demo_password:

    # role to attach to user - needs to be a valid role defined in servicenow
    role: Demo

    # whether or not this playbook run will create or cleanup the user account
    cleanup: false

  tasks:

  - name: Set first name for user
    ansible.builtin.set_fact:
      first_name: "{{ ['Craig', 'Dafne', 'Nuno', 'Roger', 'Monish', 'Anshul', 'Hicham', 'Sean', 'Andrius', 'Tom', 'Colin'] | random }}"

  - name: Create user with the proper servicenow role
    block:

      - name: Create user
        servicenow.itsm.api:
          resource: sys_user
          action: post
          query_params:
            sysparm_input_display_value: true
          data:
            user_name: "{{ demo_username }}"
            user_password: "{{ demo_password }}"
            first_name: "{{ first_name }}"
            last_name: "Demouser"
            department: "IT"
            email: "{{ demo_username }}@example.com"
            title: "instruqt_demo"
        register: user_create
        when: not cleanup

      - name: Attach role to new user
        servicenow.itsm.api:
          resource: sys_user_has_role
          action: post
          data:
            user: "{{ demo_username }}"
            role: "{{ role }}"
        register: user_role
        when: not cleanup

      - name: Find user sys_id
        servicenow.itsm.api_info:
          resource: sys_user
          sysparm_query: "user_name={{ demo_username }}"
          columns:
            - user_name
            - sys_id
            - sys_created_on
        register: user_info

      - name: Cleanup user
        servicenow.itsm.api:
          resource: sys_user
          action: delete
          sys_id: "{{ user_info.record[0].sys_id }}"
        register: user_delete
        when: cleanup
        ignore_errors: true

    rescue:

      - name: Cleanup user
        servicenow.itsm.api:
          resource: sys_user
          action: delete
          sys_id: "{{ user_info.record[0].sys_id }}"
        register: user_delete
        when: cleanup
        ignore_errors: true
